---
name: Docker Pull Tag Push
description: Pull Tag and Push Docker image
inputs:
  image-from-ghcr:
    description: Docker image on Github container registry name
    required: false
  image-from:
    description: Docker image name
    required: false
  image-to:
    description: Docker image name to
    required: true
  COSIGN_PUBLIC_KEY:
    description: Cosign public key
    required: true
outputs:
  image-to-with-digest:
    description: Docker image with digest
    value: ${{ steps.digest.outputs.image-to-with-digest }}
runs:
  using: "composite"
  steps:
    - shell: bash
      id: image-from
      run: |
        if [[ "${{ inputs.image-from-ghcr }}" != "" ]]; then
          echo "image-from=ghcr.io/${{ inputs.image-from-ghcr }}" >> $GITHUB_OUTPUT
        else
          echo "image-from=${{ inputs.image-from }}" >> $GITHUB_OUTPUT
        fi

    - uses: aps831/gh-actions/docker-pull@master
      with:
        image: "${{ steps.image-from.outputs.image-from }}"

    - uses: aps831/gh-actions/docker-cosign-verify@master
      with:
        image: "${{ steps.image-from.outputs.image-from }}"
        COSIGN_PUBLIC_KEY: ${{ inputs.COSIGN_PUBLIC_KEY }}

    - uses: aps831/gh-actions/docker-tag@master
      with:
        image-from: "${{ steps.image-from.outputs.image-from }}"
        image-to: ${{ inputs.image-to }}

    - uses: aps831/gh-actions/docker-push@master
      with:
        image: ${{ inputs.image-to }}

    - shell: bash
      id: digest
      run: |
        DIGEST=$(docker manifest inspect --verbose ${{ inputs.image-to }} | \
          jq -r 'if type=="object"
            then .Descriptor.digest
            else .[] | select(.Descriptor.platform.architecture=="amd64" and .Descriptor.platform.os=="linux") | .Descriptor.digest
            end')
        IMAGE=$(echo "${{ inputs.image-to }}" | sed 's/[^:]*$/@/' | sed 's/:@/@/')"$DIGEST"
        echo "image-to-with-digest=$IMAGE" >> $GITHUB_OUTPUT
