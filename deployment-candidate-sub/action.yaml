---
name: Deployment Candidate Subscribe
description: Subscribe to deployment candidate
inputs:
  version-identifier:
    description: Version identifier of deployment candidate
    required: true
  component:
    description: Component
    required: true
  env:
    description: Environment name
    required: true
  working-directory:
    description: Working directory
    required: true
  tfvars-filename:
    description: Filename of tfvars files
    required: true
  tfvars-var:
    description: Variable name in tfvars file
    required: true
  tfvars-regex:
    description: Regex of value in tfvars file
    required: true
  branch-update-base:
    description: Base name of temporary branch to use for creating update
    required: true
  timestamp:
    description: Timestamp temporary branch to use for creating update
    required: false
    default: "false"
  ACCESS_TOKEN:
    description: Access token
    required: true
runs:
  using: "composite"
  steps:
    # github-branch-default
    - uses: aps831/gh-actions/github-branch-default@master
      id: branch-default
      with:
        ACCESS_TOKEN: ${{ inputs.ACCESS_TOKEN }}

    # git checkout default branch
    - uses: aps831/gh-actions/git-checkout@master
      with:
        branch: ${{ steps.branch-default.outputs.branch-default }}

    # git-configure
    - uses: aps831/gh-actions/git-configure@master

    # timestamp
    - uses: aps831/gh-actions/action-create-timestamp@master
      id: timestamp

    # branch name
    - shell: bash
      id: branch
      run: |
        if [[ "${{ inputs.timestamp }}" == "false" ]]; then
          branch=${{ inputs.branch-update-base }}-${{ inputs.component }}-${{ inputs.env }}
        else
          branch=${{ inputs.branch-update-base }}-${{ inputs.component }}-${{ inputs.env }}${{ inputs.env != '' && '-' || '' }}${{ steps.timestamp.outputs.timestamp }}
        fi
        echo "branch=$branch" >> $GITHUB_OUTPUT

    # message
    - shell: bash
      id: message
      run: |
        message="chore: update tfvars for ${{ inputs.version-identifier }} release of '${{ inputs.component }}'${{ inputs.env != '' && ' to ' || '' }}${{ inputs.env }}"
        echo "message=$message" >> $GITHUB_OUTPUT

    # prrequest
    - shell: bash
      id: prrequest
      run: |
        prrequest="Deploy ${{ inputs.version-identifier }} of '${{ inputs.component }}'${{ inputs.env != '' && ' to ' || '' }}${{ inputs.env }}"
        echo "prrequest=$prrequest" >> $GITHUB_OUTPUT

    # git-create-and-switch-branch
    - uses: aps831/gh-actions/git-create-and-switch-branch@master
      with:
        branch: ${{ steps.branch.outputs.branch }}

    # update-latest-deployment-file
    - uses: aps831/gh-actions/update-latest-deployment-file@master
      id: deployment-file
      with:
        version-identifier: ${{ inputs.version-identifier }}
        component: ${{ inputs.component }}
        env: ${{ inputs.env }}

    # update-terraform-vars
    - uses: aps831/gh-actions/update-terraform-vars@master
      with:
        version-identifier: ${{ inputs.version-identifier }}
        working-directory: ${{ inputs.working-directory }}/${{ inputs.env }}
        tfvars-filename: ${{ inputs.tfvars-filename }}
        tfvars-var: ${{ inputs.tfvars-var }}
        tfvars-regex: ${{ inputs.tfvars-regex }}

    # git-commit
    - uses: aps831/gh-actions/git-commit@master
      with:
        message: ${{ steps.message.outputs.message }}

    # git-push
    - uses: aps831/gh-actions/git-push@master

    # create pull request
    - uses: aps831/gh-actions/action-create-pull-request@master
      with:
        title: ${{ steps.prrequest.outputs.prrequest }}
        body: ${{ steps.prrequest.outputs.prrequest }}
        base-branch: ${{ steps.branch-default.outputs.branch-default }}
        update-branch: ${{ steps.branch.outputs.branch }}
        ACCESS_TOKEN: ${{ inputs.ACCESS_TOKEN }}
