---
name: Build Docker Image Artifact
description: Build Docker image artifact
inputs:
  image-name:
    description: Docker image name
    required: true
  upload-image:
    description: Upload image as build artifact
    required: true
  branch-build:
    description: Branch used for build
    required: true
  working-directory:
    description: Working directory
    required: true
  dockerfile-build:
    description: Name of Dockerfile for builder container
    required: false
  dockerfile-prod:
    description: Name of Dockerfile for production container
    required: false
  dockerfile-test:
    description: Name of Dockerfile for tester container
    required: false
  volumes:
    description: Newline separated list of volumes to attach to build container
    required: false
  env:
    description: Newline separated list of environment variables to inject into build container
    required: false
  build-command:
    description: Command to run inside build container
    required: false
  test-command:
    description: Command to run inside test container
    required: false
  ACCESS_TOKEN:
    description: Access token
    required: true
outputs:
  build-artifacts-release-upload-name:
    description: Name of release build artifacts upload
    value: ${{ steps.image.outputs.build-artifacts-release-upload-name }}
  build-artifacts-publish-upload-name:
    description: Name of publication build image upload
    value: ${{ steps.image.outputs.build-artifacts-publish-upload-name }}
runs:
  using: "composite"
  steps:
    # git-checkout
    - uses: aps831/gh-actions/git-checkout@master
      with:
        branch: ${{ inputs.branch-build }}

    # docker-build-runner-image
    - uses: aps831/gh-actions/docker-build-runner-image@master
      id: builder
      with:
        docker-context: ${{ inputs.working-directory }}
        dockerfile: ${{ inputs.working-directory }}/${{ inputs.dockerfile-build }}

    # docker-run-container
    - uses: aps831/gh-actions/docker-run-container@master
      with:
        image-name: ${{ steps.builder.outputs.image-name }}
        working-directory: ${{ inputs.working-directory }}
        volumes: ${{ inputs.volumes }}
        env: ${{ inputs.env }}
        command: ${{ inputs.build-command }}

    # docker-build-prod-image
    - uses: aps831/gh-actions/docker-build-prod-image@master
      id: image
      with:
        image-name: ${{ inputs.image-name }}
        upload-image: ${{ inputs.upload-image }}
        docker-context: ${{ inputs.working-directory }}
        dockerfile: ${{ inputs.working-directory }}/${{ inputs.dockerfile-prod }}

    # docker-build-runner-image
    - uses: aps831/gh-actions/docker-build-runner-image@master
      id: tester
      with:
        docker-context: ${{ inputs.working-directory }}
        dockerfile: ${{ inputs.working-directory }}/${{ inputs.dockerfile-test }}

    # docker-run-container
    - uses: aps831/gh-actions/docker-run-container@master
      with:
        image-name: ${{ steps.tester.outputs.image-name }}
        working-directory: ${{ inputs.working-directory }}
        volumes: ${{ inputs.volumes }}
        env: |
          ${{ inputs.env }}
          IMAGE_UNDER_TEST_NAME=${{ steps.image.outputs.image-name }}
        command: ${{ inputs.test-command }}
