---
name: Build Nodejs in Docker Directory Artifact
description: Build Nodejs in Docker directory artifact
inputs:
  branch-build:
    description: Branch used for build
    required: true
  working-directory:
    description: Working directory
    required: true
  dockerfile:
    description: Dockerfile
    required: true
  volumes:
    description: Newline separated list of volumes to attach to build container
    required: false
  env:
    description: Newline separated list of environment variables to inject into build container
    required: false
  build-command:
    description: Command to run inside build container
    required: false
  output-artifact-directory:
    description: Output directory of artifact
    required: true
  output-sbom-directory:
    description: Output directory of sbom
    required: true
  ACCESS_TOKEN:
    description: Access token
    required: true
outputs:
  build-artifacts-release-upload-name:
    description: Name of release build artifacts upload
    value: ${{ steps.upload.outputs.name }}
runs:
  using: "composite"
  steps:
    # git-checkout
    - uses: aps831/gh-actions/git-checkout@master
      with:
        branch: ${{ inputs.branch-build }}

    # docker-build-runner-image
    - uses: aps831/gh-actions/docker-build-runner-image@master
      id: builder
      with:
        docker-context: ${{ inputs.working-directory }}
        dockerfile: ${{ inputs.working-directory }}/${{ inputs.dockerfile }}

    # docker-run-container
    - uses: aps831/gh-actions/docker-run-container@master
      with:
        image-name: ${{ steps.builder.outputs.image-name }}
        working-directory: ${{ inputs.working-directory }}
        volumes: ${{ inputs.volumes }}
        env: ${{ inputs.env }}
        command: ${{ inputs.build-command }}

    # zip artifact folder
    - name: zip artifact folder
      working-directory: ${{ inputs.working-directory }}
      shell: bash
      run: |
        zip -r ${{ inputs.output-artifact-directory }}.zip ${{ inputs.output-artifact-directory }}/*

    # release-artifacts-upload
    - uses: aps831/gh-actions/action-release-artifacts-upload@master
      id: upload
      with:
        description: directory-artifact
        working-directory: ${{ inputs.working-directory }}
        build-files: |
          ${{ inputs.output-artifact-directory }}.zip
          ${{ inputs.output-sbom-directory }}/cyclonedx.json

    # delete zip file
    - name: delete zip file
      working-directory: ${{ inputs.working-directory }}
      shell: bash
      run: |
        rm ${{ inputs.output-artifact-directory }}.zip
